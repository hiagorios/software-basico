cyclicHanoi.o:     file format elf32-i386


Disassembly of section .data:

00000000 <promptDiscos>:
   0:	44                   	inc    %esp
   1:	69 67 69 74 65 20 61 	imul   $0x61206574,0x69(%edi),%esp
   8:	20 71 75             	and    %dh,0x75(%ecx)
   b:	61                   	popa   
   c:	6e                   	outsb  %ds:(%esi),(%dx)
   d:	74 69                	je     78 <outputMovimento+0x9>
   f:	64 61                	fs popa 
  11:	64 65 20 64 65 20    	fs and %ah,%gs:0x20(%ebp,%eiz,2)
  17:	64 69 73 63 6f 73 3a 	imul   $0x203a736f,%fs:0x63(%ebx),%esi
  1e:	20 
	...

00000020 <promptOrigem>:
  20:	44                   	inc    %esp
  21:	69 67 69 74 65 20 6f 	imul   $0x6f206574,0x69(%edi),%esp
  28:	20 70 69             	and    %dh,0x69(%eax)
  2b:	6e                   	outsb  %ds:(%esi),(%dx)
  2c:	6f                   	outsl  %ds:(%esi),(%dx)
  2d:	20 64 65 20          	and    %ah,0x20(%ebp,%eiz,2)
  31:	6f                   	outsl  %ds:(%esi),(%dx)
  32:	72 69                	jb     9d <atoi.multiplyLoop+0x2>
  34:	67 65 6d             	gs insl (%dx),%es:(%di)
  37:	3a 20                	cmp    (%eax),%ah
	...

0000003a <showAuxiliar>:
  3a:	50                   	push   %eax
  3b:	69 6e 6f 20 61 75 78 	imul   $0x78756120,0x6f(%esi),%ebp
  42:	69 6c 69 61 72 3a 20 	imul   $0x203a72,0x61(%ecx,%ebp,2),%ebp
  49:	00 

0000004a <promptDestino>:
  4a:	44                   	inc    %esp
  4b:	69 67 69 74 65 20 6f 	imul   $0x6f206574,0x69(%edi),%esp
  52:	20 70 69             	and    %dh,0x69(%eax)
  55:	6e                   	outsb  %ds:(%esi),(%dx)
  56:	6f                   	outsl  %ds:(%esi),(%dx)
  57:	20 64 65 20          	and    %ah,0x20(%ebp,%eiz,2)
  5b:	64 65 73 74          	fs gs jae d3 <SYS_TIME+0xa>
  5f:	69 6e 6f 3a 20 00  	imul   $0x4e00203a,0x6f(%esi),%ebp

00000065 <nAtual>:
  65:	4e                   	dec    %esi
  66:	20 61 74             	and    %ah,0x74(%ecx)
  69:	75 61                	jne    cc <SYS_TIME+0x3>
  6b:	6c                   	insb   (%dx),%es:(%edi)
  6c:	3a 20                	cmp    (%eax),%ah
	...

0000006f <outputMovimento>:
  6f:	4d                   	dec    %ebp
  70:	6f                   	outsl  %ds:(%esi),(%dx)
  71:	76 65                	jbe    d8 <SYS_TIME+0xf>
  73:	6e                   	outsb  %ds:(%esi),(%dx)
  74:	64 6f                	outsl  %fs:(%esi),(%dx)
  76:	20 75 6d             	and    %dh,0x6d(%ebp)
  79:	20 64 69 73          	and    %ah,0x73(%ecx,%ebp,2)
  7d:	63 6f 20             	arpl   %bp,0x20(%edi)
  80:	64 65 20           	fs and %ah,%gs:(%eax)

00000083 <origem>:
  83:	20 20                	and    %ah,(%eax)
  85:	70 61                	jo     e8 <_start+0x1>
  87:	72 61                	jb     ea <_start+0x3>
  89:	20                 	and    %ah,(%eax)

0000008a <destino>:
  8a:	20 00                	and    %al,(%eax)

Disassembly of section .bss:

00000000 <qntDiscos>:
   0:	00 00                	add    %al,(%eax)
	...

00000004 <pinoOrigem>:
   4:	00 00                	add    %al,(%eax)
	...

00000008 <pinoAuxiliar>:
   8:	00 00                	add    %al,(%eax)
	...

0000000c <pinoDestino>:
   c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .text:

00000000 <stringLen>:
   0:	53                   	push   %ebx
   1:	89 c3                	mov    %eax,%ebx

00000003 <stringLen.nextchar>:
   3:	80 38 00             	cmpb   $0x0,(%eax)
   6:	74 03                	je     b <stringLen.finished>
   8:	40                   	inc    %eax
   9:	eb f8                	jmp    3 <stringLen.nextchar>

0000000b <stringLen.finished>:
   b:	29 d8                	sub    %ebx,%eax
   d:	5b                   	pop    %ebx
   e:	c3                   	ret    

0000000f <stringPrint>:
   f:	52                   	push   %edx
  10:	51                   	push   %ecx
  11:	53                   	push   %ebx
  12:	50                   	push   %eax
  13:	e8 e8 ff ff ff       	call   0 <stringLen>
  18:	89 c2                	mov    %eax,%edx
  1a:	58                   	pop    %eax
  1b:	89 c1                	mov    %eax,%ecx
  1d:	bb 01 00 00 00       	mov    $0x1,%ebx
  22:	b8 04 00 00 00       	mov    $0x4,%eax
  27:	cd 80                	int    $0x80
  29:	5b                   	pop    %ebx
  2a:	59                   	pop    %ecx
  2b:	5a                   	pop    %edx
  2c:	c3                   	ret    

0000002d <stringPrintLF>:
  2d:	e8 dd ff ff ff       	call   f <stringPrint>
  32:	50                   	push   %eax
  33:	b8 0a 00 00 00       	mov    $0xa,%eax
  38:	50                   	push   %eax
  39:	89 e0                	mov    %esp,%eax
  3b:	e8 cf ff ff ff       	call   f <stringPrint>
  40:	58                   	pop    %eax
  41:	58                   	pop    %eax
  42:	c3                   	ret    

00000043 <intPrint>:
  43:	50                   	push   %eax
  44:	51                   	push   %ecx
  45:	52                   	push   %edx
  46:	56                   	push   %esi
  47:	b9 00 00 00 00       	mov    $0x0,%ecx

0000004c <intPrint.divideLoop>:
  4c:	41                   	inc    %ecx
  4d:	ba 00 00 00 00       	mov    $0x0,%edx
  52:	be 0a 00 00 00       	mov    $0xa,%esi
  57:	f7 fe                	idiv   %esi
  59:	83 c2 30             	add    $0x30,%edx
  5c:	52                   	push   %edx
  5d:	83 f8 00             	cmp    $0x0,%eax
  60:	75 ea                	jne    4c <intPrint.divideLoop>

00000062 <intPrint.printLoop>:
  62:	49                   	dec    %ecx
  63:	89 e0                	mov    %esp,%eax
  65:	e8 a5 ff ff ff       	call   f <stringPrint>
  6a:	58                   	pop    %eax
  6b:	83 f9 00             	cmp    $0x0,%ecx
  6e:	75 f2                	jne    62 <intPrint.printLoop>
  70:	5e                   	pop    %esi
  71:	5a                   	pop    %edx
  72:	59                   	pop    %ecx
  73:	58                   	pop    %eax
  74:	c3                   	ret    

00000075 <intPrintLF>:
  75:	e8 c9 ff ff ff       	call   43 <intPrint>
  7a:	50                   	push   %eax
  7b:	b8 0a 00 00 00       	mov    $0xa,%eax
  80:	50                   	push   %eax
  81:	89 e0                	mov    %esp,%eax
  83:	e8 87 ff ff ff       	call   f <stringPrint>
  88:	58                   	pop    %eax
  89:	58                   	pop    %eax
  8a:	c3                   	ret    

0000008b <atoi>:
  8b:	53                   	push   %ebx
  8c:	51                   	push   %ecx
  8d:	52                   	push   %edx
  8e:	56                   	push   %esi
  8f:	89 c6                	mov    %eax,%esi
  91:	b8 00 00 00 00       	mov    $0x0,%eax
  96:	b9 00 00 00 00       	mov    $0x0,%ecx

0000009b <atoi.multiplyLoop>:
  9b:	31 db                	xor    %ebx,%ebx
  9d:	8a 1c 0e             	mov    (%esi,%ecx,1),%bl
  a0:	80 fb 30             	cmp    $0x30,%bl
  a3:	7c 14                	jl     b9 <atoi.finished>
  a5:	80 fb 39             	cmp    $0x39,%bl
  a8:	7f 0f                	jg     b9 <atoi.finished>
  aa:	80 eb 30             	sub    $0x30,%bl
  ad:	01 d8                	add    %ebx,%eax
  af:	bb 0a 00 00 00       	mov    $0xa,%ebx
  b4:	f7 e3                	mul    %ebx
  b6:	41                   	inc    %ecx
  b7:	eb e2                	jmp    9b <atoi.multiplyLoop>

000000b9 <atoi.finished>:
  b9:	bb 0a 00 00 00       	mov    $0xa,%ebx
  be:	f7 f3                	div    %ebx
  c0:	5e                   	pop    %esi
  c1:	5a                   	pop    %edx
  c2:	59                   	pop    %ecx
  c3:	5b                   	pop    %ebx
  c4:	c3                   	ret    

000000c5 <inputString>:
  c5:	51                   	push   %ecx
  c6:	52                   	push   %edx
  c7:	89 c1                	mov    %eax,%ecx
  c9:	89 da                	mov    %ebx,%edx
  cb:	b8 03 00 00 00       	mov    $0x3,%eax
  d0:	bb 00 00 00 00       	mov    $0x0,%ebx
  d5:	cd 80                	int    $0x80
  d7:	5a                   	pop    %edx
  d8:	59                   	pop    %ecx
  d9:	c3                   	ret    

000000da <exit>:
  da:	bb 00 00 00 00       	mov    $0x0,%ebx
  df:	b8 01 00 00 00       	mov    $0x1,%eax
  e4:	cd 80                	int    $0x80
  e6:	c3                   	ret    

000000e7 <_start>:
  e7:	55                   	push   %ebp
  e8:	89 e5                	mov    %esp,%ebp
  ea:	b8 00 00 00 00       	mov    $0x0,%eax
  ef:	e8 39 ff ff ff       	call   2d <stringPrintLF>
  f4:	b8 00 00 00 00       	mov    $0x0,%eax
  f9:	bb 04 00 00 00       	mov    $0x4,%ebx
  fe:	e8 c2 ff ff ff       	call   c5 <inputString>
 103:	b8 00 00 00 00       	mov    $0x0,%eax
 108:	e8 7e ff ff ff       	call   8b <atoi>
 10d:	a3 00 00 00 00       	mov    %eax,0x0
 112:	b8 20 00 00 00       	mov    $0x20,%eax
 117:	e8 11 ff ff ff       	call   2d <stringPrintLF>
 11c:	b8 04 00 00 00       	mov    $0x4,%eax
 121:	bb 04 00 00 00       	mov    $0x4,%ebx
 126:	e8 9a ff ff ff       	call   c5 <inputString>
 12b:	b8 04 00 00 00       	mov    $0x4,%eax
 130:	e8 56 ff ff ff       	call   8b <atoi>
 135:	a3 04 00 00 00       	mov    %eax,0x4
 13a:	b8 4a 00 00 00       	mov    $0x4a,%eax
 13f:	e8 e9 fe ff ff       	call   2d <stringPrintLF>
 144:	b8 0c 00 00 00       	mov    $0xc,%eax
 149:	bb 04 00 00 00       	mov    $0x4,%ebx
 14e:	e8 72 ff ff ff       	call   c5 <inputString>
 153:	b8 0c 00 00 00       	mov    $0xc,%eax
 158:	e8 2e ff ff ff       	call   8b <atoi>
 15d:	a3 0c 00 00 00       	mov    %eax,0xc
 162:	8b 0d 04 00 00 00    	mov    0x4,%ecx
 168:	8b 1d 0c 00 00 00    	mov    0xc,%ebx
 16e:	e8 22 00 00 00       	call   195 <aux>
 173:	ff 35 08 00 00 00    	pushl  0x8
 179:	ff 35 0c 00 00 00    	pushl  0xc
 17f:	ff 35 04 00 00 00    	pushl  0x4
 185:	ff 35 00 00 00 00    	pushl  0x0
 18b:	e8 27 00 00 00       	call   1b7 <clock>
 190:	e8 45 ff ff ff       	call   da <exit>

00000195 <aux>:
 195:	b8 3a 00 00 00       	mov    $0x3a,%eax
 19a:	e8 70 fe ff ff       	call   f <stringPrint>
 19f:	89 c8                	mov    %ecx,%eax
 1a1:	b9 06 00 00 00       	mov    $0x6,%ecx
 1a6:	29 c1                	sub    %eax,%ecx
 1a8:	29 d9                	sub    %ebx,%ecx
 1aa:	89 c8                	mov    %ecx,%eax
 1ac:	a3 08 00 00 00       	mov    %eax,0x8
 1b1:	e8 bf fe ff ff       	call   75 <intPrintLF>
 1b6:	c3                   	ret    

000001b7 <clock>:
 1b7:	55                   	push   %ebp
 1b8:	89 e5                	mov    %esp,%ebp
 1ba:	8b 45 08             	mov    0x8(%ebp),%eax
 1bd:	83 f8 00             	cmp    $0x0,%eax
 1c0:	0f 8e aa 00 00 00    	jle    270 <fim>
 1c6:	ff 75 10             	pushl  0x10(%ebp)
 1c9:	ff 75 14             	pushl  0x14(%ebp)
 1cc:	ff 75 0c             	pushl  0xc(%ebp)
 1cf:	48                   	dec    %eax
 1d0:	50                   	push   %eax
 1d1:	e8 2c 00 00 00       	call   202 <anti>
 1d6:	83 c4 10             	add    $0x10,%esp
 1d9:	ff 75 10             	pushl  0x10(%ebp)
 1dc:	ff 75 0c             	pushl  0xc(%ebp)
 1df:	ff 75 08             	pushl  0x8(%ebp)
 1e2:	e8 8d 00 00 00       	call   274 <imprimePasso>
 1e7:	83 c4 0c             	add    $0xc,%esp
 1ea:	ff 75 0c             	pushl  0xc(%ebp)
 1ed:	ff 75 10             	pushl  0x10(%ebp)
 1f0:	ff 75 14             	pushl  0x14(%ebp)
 1f3:	8b 45 08             	mov    0x8(%ebp),%eax
 1f6:	48                   	dec    %eax
 1f7:	50                   	push   %eax
 1f8:	e8 05 00 00 00       	call   202 <anti>
 1fd:	83 c4 10             	add    $0x10,%esp
 200:	eb 6e                	jmp    270 <fim>

00000202 <anti>:
 202:	55                   	push   %ebp
 203:	89 e5                	mov    %esp,%ebp
 205:	8b 45 08             	mov    0x8(%ebp),%eax
 208:	83 f8 00             	cmp    $0x0,%eax
 20b:	7e 63                	jle    270 <fim>
 20d:	ff 75 14             	pushl  0x14(%ebp)
 210:	ff 75 10             	pushl  0x10(%ebp)
 213:	ff 75 0c             	pushl  0xc(%ebp)
 216:	48                   	dec    %eax
 217:	50                   	push   %eax
 218:	e8 e5 ff ff ff       	call   202 <anti>
 21d:	83 c4 10             	add    $0x10,%esp
 220:	ff 75 14             	pushl  0x14(%ebp)
 223:	ff 75 0c             	pushl  0xc(%ebp)
 226:	ff 75 08             	pushl  0x8(%ebp)
 229:	e8 46 00 00 00       	call   274 <imprimePasso>
 22e:	83 c4 0c             	add    $0xc,%esp
 231:	ff 75 14             	pushl  0x14(%ebp)
 234:	ff 75 0c             	pushl  0xc(%ebp)
 237:	ff 75 10             	pushl  0x10(%ebp)
 23a:	8b 45 08             	mov    0x8(%ebp),%eax
 23d:	48                   	dec    %eax
 23e:	50                   	push   %eax
 23f:	e8 73 ff ff ff       	call   1b7 <clock>
 244:	83 c4 10             	add    $0x10,%esp
 247:	ff 75 10             	pushl  0x10(%ebp)
 24a:	ff 75 14             	pushl  0x14(%ebp)
 24d:	ff 75 08             	pushl  0x8(%ebp)
 250:	e8 1f 00 00 00       	call   274 <imprimePasso>
 255:	83 c4 0c             	add    $0xc,%esp
 258:	ff 75 14             	pushl  0x14(%ebp)
 25b:	ff 75 10             	pushl  0x10(%ebp)
 25e:	ff 75 0c             	pushl  0xc(%ebp)
 261:	8b 45 08             	mov    0x8(%ebp),%eax
 264:	48                   	dec    %eax
 265:	50                   	push   %eax
 266:	e8 97 ff ff ff       	call   202 <anti>
 26b:	83 c4 10             	add    $0x10,%esp
 26e:	eb 00                	jmp    270 <fim>

00000270 <fim>:
 270:	89 ec                	mov    %ebp,%esp
 272:	5d                   	pop    %ebp
 273:	c3                   	ret    

00000274 <imprimePasso>:
 274:	55                   	push   %ebp
 275:	89 e5                	mov    %esp,%ebp
 277:	8b 45 0c             	mov    0xc(%ebp),%eax
 27a:	04 30                	add    $0x30,%al
 27c:	a2 83 00 00 00       	mov    %al,0x83
 281:	8b 45 10             	mov    0x10(%ebp),%eax
 284:	04 30                	add    $0x30,%al
 286:	a2 8a 00 00 00       	mov    %al,0x8a
 28b:	b8 6f 00 00 00       	mov    $0x6f,%eax
 290:	e8 98 fd ff ff       	call   2d <stringPrintLF>
 295:	89 ec                	mov    %ebp,%esp
 297:	5d                   	pop    %ebp
 298:	c3                   	ret    
